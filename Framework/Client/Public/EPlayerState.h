#pragma once

BEGIN(Client)

constexpr _uint PLAYERSTATE_COUNT = 64;
using PlayerStateFlags = bitset<PLAYERSTATE_COUNT>;

enum PLAYERSTATE
{
	PLAYERSTATE_NONE,

	// ----- Default -----

	// Locomotion
	PLAYERSTATE_IDLE,
	PLAYERSTATE_WALK,
	PLAYERSTATE_RUN,
	PLAYERSTATE_LOCKON,

	// Air
	PLAYERSTATE_AIRBONE,
	PLAYERSTATE_SWIMMING,
	PLAYERSTATE_RISING,

	// Jump
	PLAYERSTATE_JUMPLAUNCH,
	PLAYERSTATE_JUMPLAND,
	PLAYERSTATE_BACKFLIP,

	// Evade
	PLAYERSTATE_EVADE,
	PLAYERSTATE_BACKSTEP,

	// Attack
	PLAYERSTATE_NORMALATTACK,
	PLAYERSTATE_CHARGEATTACK,
	PLAYERSTATE_DASHATTACK,
	PLAYERSTATE_SWIPEATTACK,
	PLAYERSTATE_PLUNGEATTACK,
	PLAYERSTATE_PARRYATTACK,
	PLAYERSTATE_BACKSTEPATTACK,

	// Parry
	PLAYERSTATE_PARRY,

	// Shell
	PLAYERSTATE_SHELLEQUIP,
	PLAYERSTATE_SHELLENTER,
	PLAYERSTATE_SHELLIDLE,
	PLAYERSTATE_SHELLCRAWL,
	PLAYERSTATE_SHELLPARRY,
	PLAYERSTATE_SHELLATTACKED,
	// ShellSkill
	PLAYERSTATE_SHELLSKILL,
	PLAYERSTATE_SHELLSKILL_FIZZLE,
	PLAYERSTATE_SHELLSKILL_ROLLOUT,
	PLAYERSTATE_SHELLSKILL_ROLLOUT_BACKFLIP,

	// Grapple
	PLAYERSTATE_GRAPPLE_THROW,
	PLAYERSTATE_GRAPPLE_LOOP,

	// Grabbed
	PLAYERSTATE_GRABBED,

	// Attacked
	PLAYERSTATE_NORMALATTACKED,
	PLAYERSTATE_HEAVYATTACKED_FRONT,
	PLAYERSTATE_HEAVYATTACKED_BACK,
	PLAYERSTATE_SUPERATTACKED,

	// GetUp
	PLAYERSTATE_GETUP_FRONT,
	PLAYERSTATE_GETUP_BACK,

	// Death
	PLAYERSTATE_NORMALDEATH,
	PLAYERSTATE_HEAVYDEATH_FRONT,
	PLAYERSTATE_HEAVYDEATH_BACK,

	// CutScene
	PLAYERSTATE_CUTSCENE_UPGRADEFORK,
	PLAYERSTATE_CUTSCENE_MOONSHELLENTER,
	PLAYERSTATE_CUTSCENE_MOONSHELLEXIT,
	PLAYERSTATE_CUTSCENE_GRABFORK,
	PLAYERSTATE_CUTSCENE_HIDE,
	PLAYERSTATE_CUTSCENE_TALK,

	// ActionSkill
	// Hammer
	PLAYERSTATE_HAMMER_PICK,
	// Grapple
	PLAYERSTATE_GRAPPLE_ATTACKSTART,
	PLAYERSTATE_GRAPPLE_ATTACK,
	PLAYERSTATE_GRAPPLE_ATTACKEND,
	PLAYERSTATE_GRAPPLE_SHELL,
	// FinishAttack
	PLAYERSTATE_FINISHATTACK,

	// ActiveSkill
	PLAYERSTATE_MANTISPUNCH,
	PLAYERSTATE_URCHIN,

	// Debuff
	PLAYERSTATE_DEBUFF_FEAR,

	// ----- Upper -----
	PLAYERSTATE_GUARD,

	// Grapple
	PLAYERSTATE_GRAPPLE_AIM,

	// Item
	PLAYERSTATE_ITEM_HEARTKELP,

	// ----- Cheat -----
	PLAYERSTATE_CHEAT,
};

enum ANIMSLOT
{
	SLOT_UPPER,
	SLOT_HAMMER,

	SLOT_END
};

END