#pragma once


#ifdef _DEBUG
#include "imgui.h"
#include "imgui_impl_win32.h"
#include "imgui_impl_dx11.h"

#include "ImGuiDialog/ImGuiFileDialog.h"
#include "ImGuiDialog/ImGuiFileDialogConfig.h"
#endif

#include "Engine_Defines.h"

namespace Client
{
	const unsigned int g_iWindowSizeX = 1280;
	const unsigned int g_iWindowSizeY = 720;

	enum LEVELID 
	{ 
		LEVEL_STATIC,
		LEVEL_LOADING,
		LEVEL_LOGO, 
		LEVEL_VILLAGE, 
		LEVEL_FIELD,
		LEVEL_PINBALL,
		LEVEL_CRABTOMB,
		LEVEL_BEACH,
		LEVEL_CLUB,
		LEVEL_TUTORIAL,
		LEVEL_END 
	};

	enum class CELL_OPTION
	{
		DEFAULT,
		DUMMY,

		MAX
	};

	enum class COLLISION_GROUP
	{
		DEFAULT,
		PLAYER,
		PLAYER_LOCKON,
		PLAYER_WEAPON,
		PLAYER_PROJECTILE,
		PLAYER_GRAPPLE,
		PLAYER_SKILL,
		MONSTER,
		MONSTER_HIT,
		SWING_HIT,
		SHELL,
		ITEM,
		FORK,
		HEARTKELP,
		NPC,
		TRIGGER,
		MAP_INTERACTION,
		GRAPPLENEEDLE,
		SPONGE,
		MAGNET,
		STEAM,
		URCHIN,
		PORTAL,
		PINBALL,
		WALL,
	};

	enum class SOUND_CHANNEL
	{
		BGM,
		AMBIENCE, 
		AMBIENCE_LOOP,
		CONVERSATION1,	// 컷씬용 대화 2개
		CONVERSATION2,
		PLAYER_VOICE,
		PLAYER_AMBIENCE,
		PLAYER_ACTION,
		PLAYER_EFFECT,
		PLAYER_SUBEFFECT,
		PLAYER_LOOP,
		ENEMY_VOICE1,
		ENEMY_VOICE2,
		ENEMY_ATTACK,
		ENEMY_ATTACK1,
		ENEMY_ATTACK2,
		ENEMY_ATTACK3,
		ENEMY_AMBIENCE1,
		ENEMY_AMBIENCE2,
		ENEMY_AMBIENCE3,
		PROJECTILE_EFFECT,		
		UI,
		NPC,
		MAPOBJECT_LOOP,
		MAPOBJECT,
		SUBMAPOBJECT,
		SHELLHOUSE,
		SOUND_END = Engine::SOUND_END,
		//SOUND_END = 32,
	};

	enum class EFFECT_TYPE
	{
		ENV_BUBBLE,
		ENV_GODRAY,
		ENV_GLOWINSECTS,

		ENV_MAPTRIGGER_INK,

		ENV_BUTTERFLY_FISH,
		ENV_SURGEON_FISH,

		ENV_MAGNET_SPARK,
		ENV_MAGNET_MESH_PULL,
		ENV_MAGNET_MESHINST_SCRAP,

		ENV_MUSIC_ON,
		ENV_MUSIC_QUATER,
		ENV_MUSIC_LINE,

		ENV_FIRECRACKER,

		ENV_STEAM_BUBBLE,
		ENV_STEAM_SMOKE,

		ENV_SPONG_SANDBURST,
		ENV_SPONGE_SANDBURST,

		ENV_INK_GATE,

		ITEM_PTCL_RESPAWN,
		ITEM_SPRITE_RESPAWN,

		PTCL_SANDBURST,

		PLAYER_PTCL_SWIMBUBBLE,
		PLAYER_PTCL_JUMPBUBBLE,
		PLAYER_PTCL_JUMPSANDBURST,

		PLAYER_PTCL_EVADESANDBURST,
		PLAYER_MESH_BACKSTEP_ATTACK,

		PLAYER_MESH_ROPEACTION,
		PLAYER_PTCL_ROPEACTION_BLUEBIG,
		PLAYER_PTCL_ROPEACTION_DIAMOND,

		PLAYER_MESHINST_ROPEACTION_DAMAGEIMPACT,

		PLAYER_MESH_ATT00,
		PLAYER_PTCL_SPARK,
		PLAYER_PTCL_PLUNGE_BIGDIAMOND,
		PLAYER_PTCL_PLUNGE_DIAMOND,

		PLAYER_MESH_HAMMER_LIGHT,
		PLAYER_MESH_HAMMER_DARK,
		PLAYER_MESH_HAMMER_TWICELIGHT,
		PLAYER_MESH_HAMMER_TWICEDARK,
		PLAYER_MESH_HAMMER_JUMPLIGHT,
		PLAYER_MESH_HAMMER_JUMPDARK,

		PLAYER_PTCL_HAMMER_SWAPDIAMOND,
		PLAYER_PTCL_HAMMER_SWAPSPARK,
		PLAYER_PTCL_HAMMER_SANDBURST,
		PLAYER_PTCL_HAMMER_SPARK,
		PLAYER_MESH_HAMMER_WIND,
		PLAYER_PTCL_HAMMER_CHARGING,
		PLAYER_PTCL_HAMMER_ELECTRIC_CHARGING,
		PLAYER_PTCL_HAMMER_ELECTRIC_SPREAD,
		PLAYER_PTCL_HAMMER_DASH_SANDBURST,
		PLAYER_PTCL_HAMMER_DASH_BUBBLE,
		PLAYER_MESH_HAMMER_LIGHTNING,

		PLAYER_PTCL_FINISH_BLOOD,
		PLAYER_PTCL_FINISH_BLOOD_UP,
		PLAYER_MESHINST_FINISH_EXECUTEICON,
		PLAYER_MESHINST_FINISH_CIRCLE,

		/* 맨티스 펀치 - 플레이어 */
		// 차징
		PLAYER_PTCL_MANTISPUNCH_CHARGING,
		PLAYER_PTCL_MANTISPUNCH_HOLDCIRCLE,
		PLAYER_PTCL_MANTISPUNCH_SHRINKCIRCLE,
		// 점프
		PLAYER_PTCL_MANTISPUNCH_SANDBURST,
		// 텔레포트
		PLAYER_MESH_MANTISPUNCH_TELEPORT,
		PLAYER_PTCL_MANTISPUNCH_TELE_START,
		PLAYER_PTCL_MANTISPUNCH_TELE_END,
		PLAYER_MESH_MANTISPUNCH_WINDIMPACT,
		// 임팩트
		PLAYER_PTCL_MANTISPUNCH_DARKIMPACT,
		PLAYER_MESHINST_MANTIS_DIMENSIONBREAK,

		/* 맨티스 펀치 - 토포다 */
		// 차징
		TOPODA_PTCL_MANTISPUNCH_CHARGING,
		TOPODA_PTCL_MANTISPUNCH_HOLDCIRCLE,
		TOPODA_PTCL_MANTISPUNCH_SHRINKCIRCLE,
		// 텔레포트
		TOPODA_MESH_MANTISPUNCH_TELEPORT,
		TOPODA_PTCL_MANTISPUNCH_TELE_START,
		TOPODA_PTCL_MANTISPUNCH_TELE_END,
		TOPODA_MESH_MANTISPUNCH_WINDIMPACT,
		// 슬래쉬
		TOPODA_MESH_MANTISPUNCH_SLASHLIGHT,
		TOPODA_MESH_MANTISPUNCH_SLASHDARK,
		// 임팩트
		TOPODA_PTCL_MANTISPUNCH_DARKIMPACT,
		TOPODA_MESHINST_MANTISPUNCH_DIMENSIONBREAK,
		// 점프 아웃
		TOPODA_PTCL_MANTISPUNCH_SANDBURST,

		/* 맨티스 펀치 - 협동 */
		// 플레이어 점프 아웃 때 메쉬 애들 출력하고 파우즈 걸고 파우즈 끝나면 파티클 출력
		MANTISPUNCH_MESHINST_DIMENSIONBREAK,
		MANTISPUNCH_MESHINST_GLASSBREAK,
		MANTISPUNCH_PTCL_HITBUBBLE,
		MANTISPUNCH_PTCL_HITSPARK,
		/* 맨티스 펀치 끝 */

		/* 성게 폭탄 - 차징 */
		URCHINBOMB_MESH_CHARGING_URCHIN,

		URCHINBOMB_MESH_CHARGING_RING,
		URCHINBOMB_MESH_CHARGING_WIND,
		URCHINBOMB_MESH_CHARGING_DISTORTION,

		URCHINBOMB_MESH_CHARGING_TORNADO_ED,
		URCHINBOMB_MESH_CHARGING_TORNADO_RED,

		URCHINBOMB_PTCL_CHARGING_LIGHT_LV0,
		URCHINBOMB_PTCL_CHARGING_LIGHT_LV1,

		URCHINBOMB_PTCL_CHARGING_SMOKE_LV1,

		/* 성게 폭탄 - 폭발 */
		URCHINBOMB_MESH_EXPLODE_SPHERE,
		URCHINBOMB_MESH_EXPLODE_GROUNDBURST,


		URCHINBOMB_MESH_EXPLODE_BACKBLAST_LV0,
		URCHINBOMB_MESH_EXPLODE_BACKBLAST_LV1,
		URCHINBOMB_MESH_EXPLODE_BACKBLAST_LV2,

		URCHINBOMB_PTCL_EXPLODE_SMOKE_LV0,
		URCHINBOMB_PTCL_EXPLODE_SMOKE_LV1,
		URCHINBOMB_PTCL_EXPLODE_SMOKE_LV2,


		PLAYER_PTCL_CHARGING_ATT,
		PLAYER_PTCL_CHARGING_SEQ00,
		PLAYER_PTCL_CHARGING_SEQ01,
		PLAYER_PTCL_CHARGING_SEQ02,

		PLAYER_MESH_SWIPE_ATT,

		PLAYER_PTCL_DASH_BEFORE,
		PLAYER_SPRITE_DASH_ATT,

		PLAYER_PTCL_HIT,
		PLAYER_SPRITE_HIT,

		PLAYER_PTCL_DAMAGED_BLOOD,
		PLAYER_PTCL_DAMAGED_REDSPARK,
		PLAYER_SPRT_DAMAGED_REDSPARK,

		PLAYER_PTCL_DAMAGED_SHELLDEFEND,

		PLAYER_PTCL_PARRY_RED,
		PLAYER_PTCL_PARRY_BLUE,
		PLAYER_PTCL_PARRY_YELLOW,
		PLAYER_PTCL_PARRY_REDBIGONE,

		PLAYER_PTCL_FIZZLE_BLUE,
		PLAYER_PTCL_FIZZLE_PURPLE,
		PLAYER_PTCL_FIZZLE_BURST,
		PLAYER_PTCL_FIZZLE_FLASH,
		PLAYER_PTCL_FIZZLE_SANDBURST,

		PLAYER_MESH_ROLL_MAINROLL,
		PLAYER_MESH_ROLL_WINDROLL,
		PLAYER_MESH_ROLL_SUBROLL,
		PLAYER_PTCL_ROLL_SANDBURST,
		PLAYER_PTCL_ROLL_SPARK,

		PLAYER_MESHINST_ROLL_DAMAGE,
		PLAYER_PTCL_ROLL_DAMAGE,

		PLAYER_PTCL_HEAL_DIAMOND,
		PLAYER_PTCL_HEAL_CIRCLE,
		PLAYER_PTCL_HEAL_SPREAD,
		PLAYER_SPRT_HEAL_SPREAD,

		PLAYER_PTCL_FORK_DIAMOND,
		PLAYER_PTCL_FORK_CIRCLE,
		PLAYER_PTCL_FORK_SPREAD,

		PLAYER_PTCL_DEBUF_FEAR,

		SHELL_MESHINST_EXPLODE,

		ENEMY_PTCL_ARROWTRAIL,
		ENEMY_PTCL_ARROWBUBBLE,

		ENEMY_SPRITE_SQUID,

		SPLITR_MESH_FEAR,
		SPLITR_MESH_FEAR_SCREW,
		SPLITR_MESH_GRAB,
		SPLITR_PTCL_HIT,
		SPLITR_SPRT_HIT_AFTER,
		SPLITR_SPRT_HIT_END,
		SPLITR_PTCL_SANDBURST,
		SPLITR_PTCL_SLAMSHOCK,
		SPLITR_PTCL_EXECUTE,
		SPLITR_PTCL_EXECUTE_AFTER,
		SPLITR_PTCL_BASH,
		SPLITR_PTCL_BASH_AFTER,
		SPLITR_MESH_BASH,

		ROLAND_ASHFLOW,

		ROLAND_SPRT_PUNCH_SEQ00_0,
		ROLAND_SPRT_PUNCH_SEQ00_1,
		ROLAND_SPRT_PUNCH_SEQ00_2,
		ROLAND_SPRT_PUNCH_SEQ00_3,
		ROLAND_SPRT_PUNCH_SEQ01,
		ROLAND_MESH_PUNCH_SEQ02,
		ROLAND_MESH_PUNCH_SEQ03,
		ROLAND_SPRT_PUNCH_SEQ04,
		ROLAND_MESH_PUNCH_SEQ05,

		ROLAND_THRUST_MESH_SEQ00_WIND,
		ROLAND_THRUST_MESH_SEQ01_DARKWIND,
		ROLAND_THRUST_MESH_SEQ02_EXGLOW,
		ROLAND_THRUST_PTCL_SEQ03_LINES,
		ROLAND_THRUST_PTCL_SEQ04_LONGDOTS,
		ROLAND_THRUST_MESH_SEQ05_AFTERWIND,

		ROLAND_SLASH_MESH_LINE,
		ROLAND_SLASH_MESH_DARK,
		ROLAND_SLASH_MESH_LIGHT,

		ROLAND_GOLFHIT_PTCL_DARK,
		ROLAND_GOLFHIT_PTCL_LIGHT,
		ROLAND_GOLFHIT_PTCL_SANDBURST,
		ROLAND_GOLFHIT_PTCL_SPARK,

		ROLAND_GOLF_MESH_DARK,
		ROLAND_GOLF_MESH_LIGHT,
		ROLAND_GOLF_MESH_LINE,

		ROLAND_WALLOP_MESH_LIGHT,
		ROLAND_WALLOP_MESH_DARK,
		ROLAND_WALLOP_PTCL_LIGHT,
		ROLAND_WALLOP_PTCL_DARK,
		ROLAND_WALLOP_PTCL_SANDBURST,

		ROLAND_BIGCOMBO_MESH_LINE,
		ROLAND_BIGCOMBO_MESH_LIGHT,
		ROLAND_BIGCOMBO_MESH_DARK,

		ROLAND_BIGSWIPE_MESH_LINE,
		ROLAND_BIGSWIPE_MESH_LIGHT,
		ROLAND_BIGSWIPE_MESH_DARK,
		ROLAND_BIGSWIPE_MESH_SMALLRING,
		ROLAND_BIGSWIPE_MESH_BIGRING,

		ROLAND_ROLL_MESH_MAIN,
		ROLAND_ROLL_MESH_SMOKEWIND,
		ROLAND_ROLL_MESH_WIND,

		PETROCH_PTCL_CHARGE,
		PETROCH_SPRT_CHARGE,
		PETROCH_PTCL_CHARGE_LIGHT,

		PETROCH_PTCL_SANDBURST,
		PETROCH_PTCL_POUNCE,

		PETROCH_PTCL_CRYSTAL_INSALL_SMOKE,
		PETROCH_PTCL_CRYSTAL_INSALL_SMOKEFLOOR,

		PETROCH_PTCL_CRYSTAL_PREEXPLODE_ELECTRIC,
		PETROCH_MESHINST_CRYSTAL_EXPLODE_0,
		PETROCH_MESHINST_CRYSTAL_EXPLODE_1,
		PETROCH_PTCL_CRYSTAL_EXPLODE_ASH,
		PETROCH_PTCL_CRYSTAL_EXPLODE_DIAMOND,

		PETROCH_PTCL_CRYSTAL_INCREASE_ELECTRIC,
		PETROCH_PTCL_CRYSTAL_INCREASE_MAX_ELECTRIC,

		PETROCH_MESH_DEFEND,

		PETROCH_MESH_ROLLING_LIGHT,
		PETROCH_MESH_ROLLING_LINE,
		PETROCH_MESH_ROLLING_DISTORTION,
		PETROCH_PTCL_ROLLING_SANDBURST,

		INKERTON_CHARGE00_PTCL_CHARGING,
		INKERTON_CHARGE00_PTCL_CHARGE,
		INKERTON_CHARGE01_PTCL_CIRCLE,
		INKERTON_CHARGE02_PTCL_FLOWER,
		INKERTON_CHARGE03_PTCL_DIAMOND,
		INKERTON_CHARGE04_PTCL_CIRCLE,
		INKERTON_CHARGE05_PTCL_INNERCIRCLE,
		INKERTON_CHARGE06_PTCL_SHIRINKDIAMOND,
		INKERTON_CHARGE07_PTCL_FIXEDDIAMOND,

		INKERTON_HEAVY00_MESH_MAINBLADE,
		INKERTON_HEAVY01_MESH_LIGHTLINEBLADE,
		INKERTON_HEAVY02_MESH_DARKTRAIL,
		INKERTON_HEAVY03_MESH_GLOW,
		INKERTON_HEAVY04_MESH_WIND,
		INKERTON_HEAVY05_MESH_SMALLRING,
		INKERTON_HEAVY06_MESH_BIGRING,

		INKERTON_GUNSHOT00_PTCL_DIAMOND,
		INKERTON_GUNSHOT01_PTCL_BIGSPREADDIAMOND,
		INKERTON_GUNSHOT02_PTCL_SHRINKCIRCLE,
		INKERTON_GUNSHOT03_PTCL_INNERCIRCLE,
		INKERTON_GUNSHOT04_PTCL_EXPANDCIRCLE,
		INKERTON_GUNSHOT05_PTCL_CIRCLE,
		INKERTON_GUNSHOT06_MESH_CHARGINGLASER,
		INKERTON_GUNSHOT07_MESH_LASER,
		INKERTON_GUNSHOT08_MESH_LASERIMPACT, // 얜 콜라이더에서 지속적으로 호출할 것
		INKERTON_GUNSHOT09_PTCL_CELEBRATE,

		INKERTON_COMBO1_MESH_MAINBLADE,
		INKERTON_COMBO1_MESH_LIGHTBLADE,
		INKERTON_COMBO1_MESH_DARKBLADE,

		INKERTON_COMBO2_MESH_MAINBLADE,
		INKERTON_COMBO2_MESH_LIGHTBLADE,
		INKERTON_COMBO2_MESH_DARKBLADE,

		INKERTON_COMBO3_MESH_MAINBLADE,
		INKERTON_COMBO3_MESH_LIGHTBLADE,
		INKERTON_COMBO3_MESH_DARKBLADE,

		INKERTON_NUT00_PTCL_SPLASH,
		INKERTON_NUT01_PTCL_SANDBURST,
		INKERTON_NUT02_PTCL_BUBBLES,
		INKERTON_NUT03_MESHINST_PIECES,

		BOWMAN_PTCL_BASH,
		BOWMAN_PTCL_CLAW,
		BOWMAN_PTCL_SANDBURST,

		WORM_PTCL_SANDBURST_EXPL,
		WORM_PTCL_SANDBURST_EXPLSLOWDOWN,

		CUTTLEFISH_PTCL_INK,

		CUTTLEFISH_PTCL_PROJ_CHARGE,
		CUTTLEFISH_MESHINST_PROJ_SPHERE,
		CUTTLEFISH_PTCL_PROJ_CIRCLE,
		CUTTLEFISH_PTCL_PROJ_TRAIL,

		CUTTLEFISH_PTCL_PROJ_EXPLODE,

		CUTTLEFISH_PTCL_PUNCH_READY,
		CUTTLEFISH_PTCL_PUNCH_START,
		CUTTLEFISH_PTCL_PUNCH_IMPACT,

		CUTTLEFISH_PTCL_GRAB,
		CUTTLEFISH_PTCL_EXECUTE,

		CUTTLEFISH_PTCL_BUBBLES,

		PAGURUS_PTCL_SANDBURST,

		PTCL_HITSPARK,

		GOLEPORT_MESH_WIND_WAIT00,
		GOLEPORT_MESH_WIND_WAIT01,
		GOLEPORT_SPRT_CIRCLE_WAIT,

		GOLEPORT_MESH_SHELLHOUSE,
		GOLEPORT_MESH_SHELLBRICK,
		GOLEPORT_MESH_BARNACLE,
		GOLEPORT_MESH_WIND_ACTIVATED,

		GOLEPORT_MESH_WIND00,
		GOLEPORT_MESH_WIND01,

		MESH_RADIALDISTORTION,



		CUTSCENE_PTCL_SHARK_WATERSPLASH,
		CUTSCENE_SPRT_SHARK_WATERSPLASH,
		CUTSCENE_MESH_SHARK_WATERSPLASH,


		CUTSCENE_PTCL_CHITAN_FRACTIONSPARK,
		CUTSCENE_PTCL_CHITAN_EXPLSLOWDOWNSPARK,
		CUTSCENE_PTCL_CHITAN_DOWNLOOP,
		CUTSCENE_PTCL_CHITAN_UPLOOP,
	};

	enum class PHYSICS_FILTER
	{
		DEFAULT			= 1 << 0,
		CONTROLLER		= 1 << 1,
		SHELL			= 1 << 2,
	};
}
using namespace Client;

extern HINSTANCE g_hInst;
extern HWND g_hWnd;

#include "Client_ShaderPasses.h"

#include <process.h>


